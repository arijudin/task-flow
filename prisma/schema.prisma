generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  projects      Project[]
  tasks         Task[]
  teamMembers   TeamMember[]
  ownedTeams    Team[]    @relation("TeamOwner")

  @@map("users")
}

model Project {
  id          String    @id @default(cuid())
  name        String
  description String?
  status      String    @default("active")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  tasks       Task[]
  teamId      String?
  team        Team?     @relation(fields: [teamId], references: [id])

  @@map("projects")
}

model Task {
  id          String    @id @default(cuid())
  title       String
  description String?
  status      String    @default("todo") // todo, in-progress, completed
  priority    String    @default("medium") // low, medium, high
  dueDate     DateTime?
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  projectId   String
  project     Project   @relation(fields: [projectId], references: [id])
  assigneeId  String?
  assignee    User?     @relation(fields: [assigneeId], references: [id])

  @@map("tasks")
}

model Team {
  id          String    @id @default(cuid())
  name        String
  description String?
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  ownerId     String
  owner       User      @relation("TeamOwner", fields: [ownerId], references: [id])
  members     TeamMember[]
  projects    Project[]

  @@map("teams")
}

model TeamMember {
  id        String   @id @default(cuid())
  role      String   @default("member") // owner, admin, member
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  teamId    String
  team      Team     @relation(fields: [teamId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])

  @@unique([teamId, userId])
  @@map("team_members")
}
